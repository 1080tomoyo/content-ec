import { Database } from "@/types/database.types";
import { createClient } from "@supabase/supabase-js";
import { NEXT_PUBLIC_SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY } from "@/lib/env";

/**
 * Supabaseクライアント設定モジュール
 * 
 * このモジュールは、Supabaseデータベースとの通信に使用する
 * クライアントインスタンスを設定・管理します。
 * 
 * 主要機能：
 * - 管理者権限のSupabaseクライアントの初期化
 * - データベース操作の権限管理
 * - 認証設定の最適化
 * 
 * セキュリティ考慮事項：
 * - サービスロールキーの適切な管理
 * - 認証設定の最適化
 * - データベースアクセスの制御
 * 
 * 使用場面：
 * - 購入記録の作成・確認
 * - ユーザー権限の管理
 * - サーバーサイドでのデータベース操作
 * 
 * 注意事項：
 * - このクライアントは管理者権限を持つため、慎重に使用する
 * - クライアントサイドでは使用しない
 * - 機密性の高い操作のみに使用する
 */

// ============================================================================
// Supabaseクライアント設定
// ============================================================================

/**
 * 管理者権限のSupabaseクライアント
 * 
 * このクライアントは、サービスロールキーを使用して初期化されており、
 * データベースのすべての操作を実行できます。
 * 
 * 特徴：
 * - 管理者権限による全データアクセス
 * - Row Level Security (RLS) をバイパス
 * - 認証不要でのデータベース操作
 * 
 * 使用目的：
 * - 購入記録の作成・確認
 * - ユーザー権限の管理
 * - サーバーサイドでのデータベース操作
 * 
 * セキュリティ考慮事項：
 * - サービスロールキーは機密情報として管理
 * - クライアントサイドでは絶対に使用しない
 * - 必要最小限の操作のみに使用
 * 
 * 認証設定の最適化：
 * - autoRefreshToken: false - トークンの自動更新を無効化
 * - persistSession: false - セッションの永続化を無効化
 * これにより、サーバーサイドでの使用に最適化
 */
const supabaseAdmin = createClient<Database>(
  // SupabaseプロジェクトのURL
  // 公開可能な情報だが、環境変数から取得して管理
  NEXT_PUBLIC_SUPABASE_URL,
  
  // サービスロールキー
  // 管理者権限を持つ機密情報
  // このキーを使用することで、すべてのデータベース操作が可能
  SUPABASE_SERVICE_ROLE_KEY,
  
  // クライアント設定オプション
  {
    auth: {
      // トークンの自動更新を無効化
      // サーバーサイドでの使用では不要な機能
      // これにより、パフォーマンスを向上
      autoRefreshToken: false,
      
      // セッションの永続化を無効化
      // サーバーサイドでの使用では不要な機能
      // これにより、メモリ使用量を削減
      persistSession: false,
    },
  }
);

// ============================================================================
// エクスポート
// ============================================================================

/**
 * 管理者権限のSupabaseクライアントをエクスポート
 * 
 * このクライアントは、以下の用途で使用されます：
 * - 購入記録の作成・確認
 * - ユーザー権限の管理
 * - サーバーサイドでのデータベース操作
 * 
 * 使用時の注意事項：
 * - クライアントサイドでは使用しない
 * - 機密性の高い操作のみに使用
 * - 適切なエラーハンドリングを実装
 */
export { supabaseAdmin };