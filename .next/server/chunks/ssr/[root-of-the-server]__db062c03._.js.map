{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/.next-internal/server/app/%28root%29/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '00ce0db2cf20d07fda22c2f82ed4b3972115df27e2'} from 'ACTIONS_MODULE0'\nexport {$$RSC_SERVER_ACTION_0 as '002682c2249ca7f4ee04fc9290258874c761b3f999'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/lib/github.ts"],"sourcesContent":["import matter from \"gray-matter\";\nimport { remark } from \"remark\";\nimport html from \"remark-html\";\nimport yaml from \"js-yaml\";\nimport {\n  GitHubItem,\n  Article,\n  Book,\n  ParsedMarkdown,\n  ArticleFrontMatter,\n  BookConfig,\n} from \"../types/github\";\n\n/**\n * GitHubリポジトリからコンテンツを取得・管理するモジュール\n * \n * このモジュールは、GitHubリポジトリに保存されたMarkdownファイルやYAMLファイルを\n * 取得し、アプリケーションで使用できる形式に変換する役割を担います。\n * 記事（articles）と本（books）の両方のコンテンツを扱います。\n */\n\n// ============================================================================\n// 設定定数\n// ============================================================================\n\n// 今回使用するコンテンツのリポジトリ情報\n// 実際の運用では、環境変数から取得することを推奨\nconst REPO_OWNER = \"b13o\";\nconst REPO_NAME = \"dummy-ec-content\";\n\n// GitHub APIのエンドポイントURL\n// RAW_CONTENT_URL: ファイルの生の内容を取得するためのURL\n// API_URL: ディレクトリ構造やファイル一覧を取得するためのURL\nconst RAW_CONTENT_URL = `https://raw.githubusercontent.com/${REPO_OWNER}/${REPO_NAME}/main`;\nconst API_URL = `https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/contents`;\n \n// ============================================================================\n// 基本データ取得関数\n// ============================================================================\n\n/**\n * GitHubリポジトリの指定されたディレクトリ内のファイル・フォルダ一覧を取得する\n * \n * @param path - 取得したいディレクトリのパス（例: \"articles\", \"books/example-book\"）\n * @returns Promise<GitHubItem[]> - ディレクトリ内のアイテム一覧\n * \n * この関数は、GitHub APIを使用してディレクトリ構造を取得します。\n * 記事一覧や本の章一覧を取得する際の基盤となる関数です。\n * \n * キャッシュを強制することで、同じリクエストを繰り返し実行する際の\n * パフォーマンスを向上させています。\n */\nexport async function fetchDirectoryContents(\n  path: string\n): Promise<GitHubItem[]> {\n  // GitHub APIのContents APIを使用してディレクトリ内容を取得\n  // force-cacheにより、同じリクエストはキャッシュから返される\n  const response = await fetch(`${API_URL}/${path}`, {\n    cache: \"force-cache\",\n  });\n\n  // APIエラーの場合は適切なエラーメッセージと共に例外を投げる\n  // これにより、呼び出し元でエラーハンドリングが可能になる\n  if (!response.ok) {\n    throw new Error(`GitHub API error: ${response.status}`);\n  }\n\n  // レスポンスをJSON形式でパースして返す\n  return await response.json();\n}\n \n/**\n * GitHubリポジトリから指定されたファイルの内容を取得する\n * \n * @param path - 取得したいファイルのパス（例: \"articles/example.md\", \"books/example/config.yaml\"）\n * @returns Promise<string> - ファイルの生の内容（テキスト形式）\n * \n * この関数は、MarkdownファイルやYAMLファイルなどの実際の内容を取得します。\n * fetchDirectoryContentsで取得したファイル一覧から、個別のファイル内容を\n * 取得する際に使用されます。\n * \n * キャッシュを強制することで、同じファイルを複数回取得する際の\n * パフォーマンスを向上させています。\n */\nexport async function fetchFileContent(path: string) {\n  // GitHubのRaw Content APIを使用してファイルの生の内容を取得\n  // このAPIはファイルの内容をそのままテキスト形式で返す\n  const response = await fetch(`${RAW_CONTENT_URL}/${path}`, {\n    cache: \"force-cache\",\n  });\n  \n  // ファイルが存在しない場合やアクセス権限がない場合はエラーを投げる\n  if (!response.ok) {\n    throw new Error(`Failed to fetch file: ${response.status}`);\n  }\n\n  // レスポンスをテキスト形式で取得して返す\n  return await response.text();\n}\n \n// ============================================================================\n// データ変換・パース関数\n// ============================================================================\n\n/**\n * YAML形式の文字列をJavaScriptオブジェクトに変換する\n * \n * @param content - パースしたいYAML形式の文字列\n * @returns T - パースされたJavaScriptオブジェクト\n * \n * この関数は、本の設定ファイル（config.yaml）などのYAMLファイルを\n * JavaScriptオブジェクトに変換するために使用されます。\n * \n * 型安全性を保つため、ジェネリック型Tを使用しており、\n * 呼び出し元で期待する型を指定できます。\n */\nexport function parseYaml<T>(content: string): T {\n  try {\n    // js-yamlライブラリを使用してYAMLをJavaScriptオブジェクトに変換\n    // 型アサーション（as T）により、呼び出し元で指定した型として扱う\n    return yaml.load(content) as T;\n  } catch (error) {\n    // YAMLの構文エラーやその他のエラーが発生した場合は、\n    // より詳細なエラーメッセージと共に例外を投げる\n    throw new Error(`Failed to parse YAML: ${error}`);\n  }\n}\n \n/**\n * Markdownファイルを解析して、フロントマターとHTML化された内容を返す\n * \n * @param markdown - 解析したいMarkdown形式の文字列\n * @returns Promise<ParsedMarkdown> - フロントマターとHTML化された内容を含むオブジェクト\n * \n * この関数は、記事や本の章のMarkdownファイルを処理するために使用されます。\n * \n * 処理の流れ：\n * 1. gray-matterライブラリでフロントマター（メタデータ）を抽出\n * 2. remarkライブラリでMarkdownをHTMLに変換\n * 3. フロントマターとHTML化された内容を返す\n * \n * フロントマターには、タイトル、価格、タグなどのメタデータが含まれます。\n */\nexport async function parseMarkdown(markdown: string): Promise<ParsedMarkdown> {\n  // gray-matterライブラリを使用してフロントマターを解析\n  // フロントマターはMarkdownファイルの先頭にあるYAML形式のメタデータ\n  // data: フロントマターの内容（タイトル、価格、タグなど）\n  // content: フロントマターを除いたMarkdown本文\n  const { data, content } = matter(markdown);\n\n  // remarkライブラリを使用してMarkdownをHTMLに変換\n  // htmlプラグインにより、MarkdownがHTMLに変換される\n  // sanitize: false により、HTMLタグのサニタイズを無効化（セキュリティ上の注意が必要）\n  const processedContent = await remark()\n    .use(html, { sanitize: false })\n    .process(content);\n\n  // フロントマターとHTML化された内容を返す\n  // フロントマターは型アサーションによりArticleFrontMatter型として扱う\n  return {\n    frontMatter: data as ArticleFrontMatter,\n    content: processedContent.toString(),\n  };\n}\n \n// ============================================================================\n// 記事関連の関数\n// ============================================================================\n\n/**\n * 記事一覧を取得し、アプリケーションで使用できる形式に変換する\n * \n * @returns Promise<Article[]> - 記事一覧の配列\n * \n * この関数は、GitHubリポジトリのarticlesディレクトリから\n * すべての記事を取得し、アプリケーションで表示・処理できる形式に変換します。\n * \n * 処理の流れ：\n * 1. articlesディレクトリの内容を取得\n * 2. Markdownファイルのみをフィルタリング\n * 3. 各記事の内容を取得・解析\n * 4. フロントマターからメタデータを抽出\n * 5. 統一された形式で記事データを返す\n */\nexport async function fetchArticles(): Promise<Article[]> {\n  // articlesディレクトリの内容を取得\n  // これにより、ディレクトリ内のすべてのファイル・フォルダの一覧が取得される\n  const contents = await fetchDirectoryContents(\"articles\");\n\n  // 記事として扱うファイルのみをフィルタリング\n  // 条件：\n  // - type === \"file\": ファイルのみ（ディレクトリは除外）\n  // - name.endsWith(\".md\"): Markdownファイルのみ\n  // - !item.name.startsWith(\".\"): 隠しファイル（.keepなど）を除外\n  const articleFiles = contents.filter(\n    (item: GitHubItem) =>\n      item.type === \"file\" &&\n      item.name.endsWith(\".md\") &&\n      !item.name.startsWith(\".\")\n  );\n\n  // 各記事のデータを並列で取得・処理\n  // Promise.allを使用することで、複数の記事を同時に処理し、パフォーマンスを向上\n  const articles = await Promise.all(\n    articleFiles.map(async (file) => {\n      // 記事ファイルの内容を取得\n      const markdown = await fetchFileContent(`articles/${file.name}`);\n\n      // Markdownを解析してフロントマターとHTML化された内容を取得\n      const { frontMatter, content } = await parseMarkdown(markdown);\n\n      // 記事データを統一された形式で構築\n      return {\n        // ファイル名から拡張子を除いたものをIDとして使用\n        id: file.name.replace(\".md\", \"\"),\n        // フロントマターからタイトルを取得、なければデフォルト値を設定\n        title: frontMatter.title || \"タイトルなし\",\n        // フロントマターからタグ（topics）を取得、なければ空配列\n        tags: frontMatter.topics || [],\n        // フロントマターから価格を取得、なければ0（無料）\n        price: frontMatter.price || 0,\n        // 価格が0より大きい場合に有料コンテンツとして判定\n        isPaid: !!frontMatter.price && frontMatter.price > 0,\n        // フロントマターから絵文字を取得、なければデフォルトの📝\n        emoji: frontMatter.emoji || \"📝\",\n        // 公開日を取得、なければ現在の日時\n        createdAt: frontMatter.published_at || new Date().toISOString(),\n        // 更新日を取得、なければ公開日、それもなければ現在の日時\n        updatedAt:\n          frontMatter.updated_at ||\n          frontMatter.published_at ||\n          new Date().toISOString(),\n        // HTML化された記事の内容\n        content: content,\n      };\n    })\n  );\n\n  // 処理に失敗した記事（null）を除外して返す\n  // 通常はnullになることはないが、エラーハンドリングの一環として\n  return articles.filter((article) => article !== null);\n}\n \n// ============================================================================\n// 本関連の関数\n// ============================================================================\n\n/**\n * 本一覧を取得し、アプリケーションで使用できる形式に変換する\n * \n * @returns Promise<Book[]> - 本一覧の配列\n * \n * この関数は、GitHubリポジトリのbooksディレクトリから\n * すべての本を取得し、アプリケーションで表示・処理できる形式に変換します。\n * \n * 本の構造：\n * - 各本は独立したディレクトリに格納される\n * - config.yamlファイルに本のメタデータが記述される\n * - 章はMarkdownファイルとして格納される\n * - 表紙画像はcover.pngとして格納される\n * \n * 処理の流れ：\n * 1. booksディレクトリの内容を取得\n * 2. ディレクトリのみをフィルタリング\n * 3. 各本のconfig.yamlを取得・解析\n * 4. 章一覧を取得・ソート\n * 5. 統一された形式で本データを返す\n */\nexport async function fetchBooks(): Promise<Book[]> {\n  // booksディレクトリの内容を取得\n  // これにより、本のディレクトリ一覧が取得される\n  const contents = await fetchDirectoryContents(\"books\");\n\n  // 本として扱うディレクトリのみをフィルタリング\n  // 各本は独立したディレクトリに格納されているため、ディレクトリのみを対象とする\n  const bookDirectories = contents.filter((item) => item.type === \"dir\");\n\n  // 各本のデータを並列で取得・処理\n  // Promise.allを使用することで、複数の本を同時に処理し、パフォーマンスを向上\n  const books = await Promise.all(\n    bookDirectories.map(async (dir) => {\n      // 本の設定ファイル（config.yaml）を取得\n      // このファイルには本のタイトル、説明、価格、タグなどのメタデータが含まれる\n      const configContent = await fetchFileContent(\n        `books/${dir.name}/config.yaml`\n      );\n\n      // 設定ファイルが存在しない場合はnullを返す\n      // これにより、不完全な本は一覧から除外される\n      if (!configContent) {\n        return null;\n      }\n\n      // YAML形式の設定ファイルをJavaScriptオブジェクトに変換\n      const config = parseYaml<BookConfig>(configContent);\n\n      // 表紙画像のURLを構築\n      // GitHubのRaw Content APIを使用して画像にアクセスできるURLを生成\n      const coverImagePath = `${RAW_CONTENT_URL}/books/${dir.name}/cover.png`;\n\n      // 本のディレクトリ内の章一覧を取得\n      const chapterContents = await fetchDirectoryContents(`books/${dir.name}`);\n      \n      // 章として扱うファイルのみをフィルタリング・ソート\n      const chapters = chapterContents\n        .filter(\n          (item) =>\n            item.type === \"file\" &&\n            item.name.endsWith(\".md\") &&\n            !item.name.startsWith(\".\")\n        )\n        .sort((a, b) => {\n          // ファイル名の数字部分で並べる（1.intro.md, 2.setup.md など）\n          // これにより、章が正しい順序で表示される\n          const aNum = parseInt(a.name.split(\".\")[0]) || 0;\n          const bNum = parseInt(b.name.split(\".\")[0]) || 0;\n          return aNum - bNum;\n        });\n\n      // 本データを統一された形式で構築\n      return {\n        // ディレクトリ名をIDとして使用\n        id: dir.name,\n        // 設定ファイルからタイトルを取得、なければディレクトリ名を使用\n        title: config.title || dir.name,\n        // 設定ファイルから説明を取得、なければ空文字\n        description: config.summary || \"\",\n        // 設定ファイルからタグ（topics）を取得、なければ空配列\n        tags: config.topics || [],\n        // 設定ファイルから価格を取得、なければ0（無料）\n        price: config.price || 0,\n        // 価格が0より大きい場合に有料コンテンツとして判定\n        isPaid: !!config.price && config.price > 0,\n        // 表紙画像のURL\n        coverImage: coverImagePath,\n        // 章の数（目次表示などで使用）\n        chapterCount: chapters.length,\n        // 公開日を取得、なければ現在の日時\n        createdAt: config.published_at || new Date().toISOString(),\n        // 更新日を取得、なければ公開日、それもなければ現在の日時\n        updatedAt:\n          config.updated_at || config.published_at || new Date().toISOString(),\n      };\n    })\n  );\n\n  // 処理に失敗した本（null）を除外して返す\n  // 設定ファイルが存在しない本などが除外される\n  return books.filter((book) => book !== null);\n}\n \n/**\n * 特定の本の詳細情報と章の内容を取得する\n * \n * @param slug - 本のスラッグ（ディレクトリ名）\n * @returns Promise<Book | null> - 本の詳細情報、存在しない場合はnull\n * \n * この関数は、本の詳細ページで使用される関数です。\n * fetchBooks()とは異なり、章の実際の内容も含めて取得します。\n * \n * 処理の流れ：\n * 1. 本の設定ファイル（config.yaml）を取得・解析\n * 2. 本のディレクトリ内の章一覧を取得\n * 3. 各章の内容を取得・解析\n * 4. 本の詳細情報と章の内容を統合して返す\n * \n * 注意：この関数は章の内容も含むため、fetchBooks()よりも重い処理になります。\n * 本一覧表示ではfetchBooks()を使用し、詳細表示でのみこの関数を使用することを推奨します。\n */\nexport async function fetchBook(slug: string): Promise<Book | null> {\n  // 本の設定ファイル（config.yaml）を取得\n  // このファイルには本のメタデータが含まれる\n  const configContent = await fetchFileContent(`books/${slug}/config.yaml`);\n\n  // 設定ファイルが存在しない場合はnullを返す\n  // これにより、存在しない本へのアクセスを適切に処理\n  if (!configContent) {\n    return null;\n  }\n\n  // YAML形式の設定ファイルをJavaScriptオブジェクトに変換\n  const config = parseYaml<BookConfig>(configContent);\n\n  // 本のディレクトリ内の章一覧を取得\n  const contents = await fetchDirectoryContents(`books/${slug}`);\n\n  // 章として扱うファイルのみをフィルタリング・ソート\n  const chapterFiles = contents\n    .filter(\n      (item) =>\n        item.type === \"file\" &&\n        item.name.endsWith(\".md\") &&\n        !item.name.startsWith(\".\")\n    )\n    .sort((a, b) => {\n      // ファイル名の数字部分でソート（1.intro.md, 2.setup.md など）\n      // これにより、章が正しい順序で表示される\n      const aNum = parseInt(a.name.split(\".\")[0]) || 0;\n      const bNum = parseInt(b.name.split(\".\")[0]) || 0;\n      return aNum - bNum;\n    });\n\n  // 章が存在しない場合はnullを返す\n  // これにより、内容のない本を適切に処理\n  if (chapterFiles.length === 0) {\n    return null;\n  }\n\n  // 各章の内容を並列で取得・処理\n  // Promise.allを使用することで、複数の章を同時に処理し、パフォーマンスを向上\n  const chapters = await Promise.all(\n    chapterFiles.map(async (file, index: number) => {\n      // 章ファイルの内容を取得\n      const markdown = await fetchFileContent(`books/${slug}/${file.name}`);\n\n      // ファイルが存在しない場合はnullを返す\n      if (!markdown) {\n        return null;\n      }\n\n      // Markdownを解析してフロントマターとHTML化された内容を取得\n      const { frontMatter, content } = await parseMarkdown(markdown);\n\n      // チャプターのスラッグは、ファイル名から拡張子を除いたもの\n      // これにより、URLで章にアクセスできるようになる\n      const chapterSlug = file.name.replace(\".md\", \"\");\n\n      // 章データを構築\n      return {\n        // 章のスラッグ（URLで使用）\n        slug: chapterSlug,\n        // フロントマターからタイトルを取得、なければデフォルトの章タイトル\n        title: frontMatter.title || `Chapter ${index + 1}`,\n        // HTML化された章の内容\n        content: content,\n        // 章の順序（目次表示などで使用）\n        order: index,\n      };\n    })\n  );\n\n  // 本の詳細情報を構築\n  return {\n    // 本のスラッグ（ID）\n    id: slug,\n    // 設定ファイルからタイトルを取得、なければスラッグを使用\n    title: config.title || slug,\n    // 設定ファイルから説明を取得、なければ空文字\n    description: config.summary || \"\",\n    // 設定ファイルからタグ（topics）を取得、なければ空配列\n    tags: config.topics || [],\n    // 設定ファイルから価格を取得、なければ0（無料）\n    price: config.price || 0,\n    // 価格が0より大きい場合に有料コンテンツとして判定\n    isPaid: !!config.price && config.price > 0,\n    // 表紙画像のURL\n    coverImage: `${RAW_CONTENT_URL}/books/${slug}/cover.png`,\n    // 章の一覧（処理に失敗した章は除外）\n    chapters: chapters.filter((chapter) => chapter !== null),\n    // 章の数\n    chapterCount: chapters.length,\n    // 公開日を取得、なければ現在の日時\n    createdAt: config.published_at || new Date().toISOString(),\n    // 更新日を取得、なければ公開日、それもなければ現在の日時\n    updatedAt:\n      config.updated_at || config.published_at || new Date().toISOString(),\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,yHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/purchase-button.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/purchase-button.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/purchase-button.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/purchase-button.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/purchase-button.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/purchase-button.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/app/%28root%29/_components/featured-content.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { CheckSquare, Clock, Crown, ListTodo, Target } from \"lucide-react\";\nimport { fetchBook } from \"@/lib/github\";\nimport PurchaseButton from \"@/components/purchase-button\";\n \nconst FEATURED_CONTENT = {\n  slug: \"todo-handson-book\",\n  properPrice: 27800,\n  discount: 94,\n  time: \"60分\",\n  difficulty: \"入門\",\n};\n \nasync function FeaturedContent() {\n  const content = await fetchBook(FEATURED_CONTENT.slug);\n \n  return (\n    <Card className=\"mb-16 overflow-hidden max-w-5xl mx-auto py-0 gap-0\">\n      <div className=\"relative bg-zinc-100 dark:bg-zinc-900 p-4 border-b\">\n        <div className=\"flex gap-2\">\n          <div className=\"h-3 w-3 rounded-full bg-[#FF5F57]\" />\n          <div className=\"h-3 w-3 rounded-full bg-[#FFBD2E]\" />\n          <div className=\"h-3 w-3 rounded-full bg-[#28C840]\" />\n        </div>\n      </div>\n      <div className=\"grid lg:grid-cols-[400px_1fr]\">\n        <div className=\"relative w-full\">\n          <div className=\"relative aspect-[1/1.4] w-full\">\n            <Image\n              src={content?.coverImage || \"\"}\n              alt=\"Featured content\"\n              fill\n              priority\n              className=\"object-cover\"\n              sizes=\"(max-width: 1024px) 100vw, 400px\"\n            />\n          </div>\n        </div>\n        <div className=\"flex flex-col\">\n          <CardContent className=\"grid flex-1 gap-4 p-6\">\n            <div className=\"flex items-center gap-4\">\n              <Badge className=\"bg-gradient-to-r from-purple-500 to-blue-500\">\n                <Crown className=\"h-3 w-3 mr-1\" />\n                Premium\n              </Badge>\n              <Badge className=\"bg-primary/10 text-primary hover:bg-primary/20\">\n                New\n              </Badge>\n            </div>\n            <div className=\"space-y-4\">\n              <h2 className=\"text-2xl font-bold sm:text-3xl\">\n                {content?.title}\n              </h2>\n              <div className=\"flex items-center gap-2 text-gray-600\">\n                <Clock className=\"w-4 h-4\" />\n                <span>学習時間: 約{FEATURED_CONTENT.time}</span>\n                <span className=\"mx-2\">•</span>\n                <Target className=\"w-4 h-4\" />\n                <span>難易度: {FEATURED_CONTENT.difficulty}</span>\n                <ListTodo className=\"w-4 h-4\" />\n                <span>全{content?.chapterCount}タスク</span>\n              </div>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">ステップ</h3>\n              <div className=\"space-y-2 text-gray-600\">\n                {content?.chapters?.slice(0, 5).map((chapter) => (\n                  <div key={chapter.slug} className=\"flex items-center gap-2\">\n                    <CheckSquare className=\"w-4 h-4 mt-1 text-green-600\" />\n                    {chapter.title}\n                  </div>\n                ))}\n                {content?.chapters && content?.chapters.length > 5 && (\n                  <div className=\"text-gray-500 mt-2\">\n                    （他 {content?.chapterCount - 5} タスク）\n                  </div>\n                )}\n              </div>\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex items-center justify-between border-t p-6\">\n            <div className=\"text-2xl font-bold flex items-center\">\n              ￥{content?.price.toLocaleString()}\n              <span className=\"text-sm font-normal text-muted-foreground line-through mx-2\">\n                ￥{FEATURED_CONTENT.properPrice.toLocaleString()}\n              </span>\n              <span className=\"text-sm flex font-medium text-muted-foreground\">\n                {FEATURED_CONTENT.discount}%OFF\n              </span>\n            </div>\n \n            {content?.id && content?.price && content?.title && (\n              <PurchaseButton\n                contentId={content?.id}\n                price={content?.price}\n                title={content?.title}\n                contentType=\"book\"\n                size=\"lg\"\n                className=\"bg-gradient-to-r from-purple-500 to-blue-500 font-semibold\"\n              />\n            )}\n          </CardFooter>\n        </div>\n      </div>\n    </Card>\n  );\n}\n \nexport default FeaturedContent;"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;AAEA,MAAM,mBAAmB;IACvB,MAAM;IACN,aAAa;IACb,UAAU;IACV,MAAM;IACN,YAAY;AACd;AAEA,eAAe;IACb,MAAM,UAAU,MAAM,IAAA,iIAAS,EAAC,iBAAiB,IAAI;IAErD,qBACE,8OAAC,wIAAI;QAAC,WAAU;;0BACd,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;0BAGnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,wIAAK;gCACJ,KAAK,SAAS,cAAc;gCAC5B,KAAI;gCACJ,IAAI;gCACJ,QAAQ;gCACR,WAAU;gCACV,OAAM;;;;;;;;;;;;;;;;kCAIZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,+IAAW;gCAAC,WAAU;;kDACrB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,0IAAK;gDAAC,WAAU;;kEACf,8OAAC,6MAAK;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGpC,8OAAC,0IAAK;gDAAC,WAAU;0DAAiD;;;;;;;;;;;;kDAIpE,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DACX,SAAS;;;;;;0DAEZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,6MAAK;wDAAC,WAAU;;;;;;kEACjB,8OAAC;;4DAAK;4DAAQ,iBAAiB,IAAI;;;;;;;kEACnC,8OAAC;wDAAK,WAAU;kEAAO;;;;;;kEACvB,8OAAC,gNAAM;wDAAC,WAAU;;;;;;kEAClB,8OAAC;;4DAAK;4DAAM,iBAAiB,UAAU;;;;;;;kEACvC,8OAAC,0NAAQ;wDAAC,WAAU;;;;;;kEACpB,8OAAC;;4DAAK;4DAAE,SAAS;4DAAa;;;;;;;;;;;;;;;;;;;kDAGlC,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAA6B;;;;;;0DAC3C,8OAAC;gDAAI,WAAU;;oDACZ,SAAS,UAAU,MAAM,GAAG,GAAG,IAAI,CAAC,wBACnC,8OAAC;4DAAuB,WAAU;;8EAChC,8OAAC,0OAAW;oEAAC,WAAU;;;;;;gEACtB,QAAQ,KAAK;;2DAFN,QAAQ,IAAI;;;;;oDAKvB,SAAS,YAAY,SAAS,SAAS,SAAS,mBAC/C,8OAAC;wDAAI,WAAU;;4DAAqB;4DAC9B,SAAS,eAAe;4DAAE;;;;;;;;;;;;;;;;;;;;;;;;;0CAMxC,8OAAC,8IAAU;gCAAC,WAAU;;kDACpB,8OAAC;wCAAI,WAAU;;4CAAuC;4CAClD,SAAS,MAAM;0DACjB,8OAAC;gDAAK,WAAU;;oDAA8D;oDAC1E,iBAAiB,WAAW,CAAC,cAAc;;;;;;;0DAE/C,8OAAC;gDAAK,WAAU;;oDACb,iBAAiB,QAAQ;oDAAC;;;;;;;;;;;;;oCAI9B,SAAS,MAAM,SAAS,SAAS,SAAS,uBACzC,8OAAC,mJAAc;wCACb,WAAW,SAAS;wCACpB,OAAO,SAAS;wCAChB,OAAO,SAAS;wCAChB,aAAY;wCACZ,MAAK;wCACL,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1B;uCAEe","debugId":null}},
    {"offset": {"line": 936, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/app/%28root%29/_components/content-card.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Crown } from \"lucide-react\";\nimport Link from \"next/link\";\nimport PurchaseButton from \"@/components/purchase-button\";\n \ninterface ContentCardProps {\n  content: {\n    slug: string;\n    title: string;\n    price: number;\n    tags: string[];\n    image?: string;\n    emoji?: string;\n  };\n}\n \nfunction ContentCard({ content }: ContentCardProps) {\n  const isBook = content.image !== \"\";\n  const isPremium = content.price > 0;\n \n  // カードの内容をコンポーネント化\n  const CardComponent = () => (\n    <Card className=\"overflow-hidden pt-0 transition-transform scale-[98%] hover:scale-100 min-w-[500px]\">\n      <div className=\"relative aspect-[16/9]\">\n        {isBook ? (\n          <Image\n            src={content.image || \"\"}\n            alt={content.title}\n            fill\n            sizes=\"(min-width: 768px) 768px, 100vw\"\n            className=\"object-contain bg-gradient-to-br p-8 from-blue-100 to-teal-100\"\n          />\n        ) : (\n          <div\n            className={`w-full h-full flex items-center justify-center bg-gradient-to-br from-indigo-100 to-sky-100`}\n          >\n            <span className=\"text-7xl\">{content.emoji || \"📝\"}</span>\n          </div>\n        )}\n      </div>\n      <CardHeader className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"space-x-2\">\n            {content.tags.map((tag) => (\n              <Badge variant=\"secondary\" key={tag}>\n                {tag}\n              </Badge>\n            ))}\n          </div>\n          {content.price > 0 && (\n            <Badge className=\"bg-gradient-to-r from-purple-500 to-blue-500\">\n              <Crown className=\"h-3 w-3 mr-1\" />\n              Premium\n            </Badge>\n          )}\n        </div>\n        <CardTitle className=\"line-clamp-2 text-2xl\">{content.title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-xl font-bold\">\n          {content.price === 0 ? \"無料\" : `￥${content.price.toLocaleString()}`}\n        </p>\n      </CardContent>\n      <CardFooter>\n        {content.price > 0 ? (\n          <PurchaseButton\n            contentId={content.slug}\n            price={content.price}\n            title={content.title}\n            contentType={isBook ? \"book\" : \"article\"}\n            className=\"w-full\"\n          />\n        ) : (\n          <Button className=\"w-full\">\n            {content.price > 0 ? \"購入する\" : \"無料で読む\"}\n          </Button>\n        )}\n      </CardFooter>\n    </Card>\n  );\n \n  // 有料記事の場合はリンクを無効にして、カードをそのまま表示\n  if (isPremium && !isBook) {\n    return <CardComponent />;\n  }\n \n  // 無料コンテンツの場合はリンクを有効にする\n  return (\n    <Link href={isBook ? `/books/${content.slug}` : `/posts/${content.slug}`}>\n      <CardComponent />\n    </Link>\n  );\n}\n \nexport default ContentCard;"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;;;AAaA,SAAS,YAAY,EAAE,OAAO,EAAoB;IAChD,MAAM,SAAS,QAAQ,KAAK,KAAK;IACjC,MAAM,YAAY,QAAQ,KAAK,GAAG;IAElC,kBAAkB;IAClB,MAAM,gBAAgB,kBACpB,8OAAC,wIAAI;YAAC,WAAU;;8BACd,8OAAC;oBAAI,WAAU;8BACZ,uBACC,8OAAC,wIAAK;wBACJ,KAAK,QAAQ,KAAK,IAAI;wBACtB,KAAK,QAAQ,KAAK;wBAClB,IAAI;wBACJ,OAAM;wBACN,WAAU;;;;;6CAGZ,8OAAC;wBACC,WAAW,CAAC,2FAA2F,CAAC;kCAExG,cAAA,8OAAC;4BAAK,WAAU;sCAAY,QAAQ,KAAK,IAAI;;;;;;;;;;;;;;;;8BAInD,8OAAC,8IAAU;oBAAC,WAAU;;sCACpB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACZ,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,oBACjB,8OAAC,0IAAK;4CAAC,SAAQ;sDACZ;2CAD6B;;;;;;;;;;gCAKnC,QAAQ,KAAK,GAAG,mBACf,8OAAC,0IAAK;oCAAC,WAAU;;sDACf,8OAAC,6MAAK;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;sCAKxC,8OAAC,6IAAS;4BAAC,WAAU;sCAAyB,QAAQ,KAAK;;;;;;;;;;;;8BAE7D,8OAAC,+IAAW;8BACV,cAAA,8OAAC;wBAAE,WAAU;kCACV,QAAQ,KAAK,KAAK,IAAI,OAAO,CAAC,CAAC,EAAE,QAAQ,KAAK,CAAC,cAAc,IAAI;;;;;;;;;;;8BAGtE,8OAAC,8IAAU;8BACR,QAAQ,KAAK,GAAG,kBACf,8OAAC,mJAAc;wBACb,WAAW,QAAQ,IAAI;wBACvB,OAAO,QAAQ,KAAK;wBACpB,OAAO,QAAQ,KAAK;wBACpB,aAAa,SAAS,SAAS;wBAC/B,WAAU;;;;;6CAGZ,8OAAC,4IAAM;wBAAC,WAAU;kCACf,QAAQ,KAAK,GAAG,IAAI,SAAS;;;;;;;;;;;;;;;;;IAOxC,+BAA+B;IAC/B,IAAI,aAAa,CAAC,QAAQ;QACxB,qBAAO,8OAAC;;;;;IACV;IAEA,uBAAuB;IACvB,qBACE,8OAAC,uKAAI;QAAC,MAAM,SAAS,CAAC,OAAO,EAAE,QAAQ,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE,QAAQ,IAAI,EAAE;kBACtE,cAAA,8OAAC;;;;;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 1124, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/app/%28root%29/_components/content-grid.tsx"],"sourcesContent":["import { Article, Book } from \"@/types/github\";\nimport ContentCard from \"./content-card\";\n \n// カードに表示するデータに限定して変換\nfunction mapToCardProps(content: Book | Article) {\n  const isBook = \"coverImage\" in content;\n  return {\n    slug: content.id,\n    title: content.title,\n    price: content.price,\n    tags: content.tags,\n    image: isBook ? (content as Book).coverImage : \"\",\n    emoji: !isBook ? (content as Article).emoji : \"\",\n  };\n}\n \nfunction ContentGrid({ contents }: { contents: Book[] | Article[] }) {\n  return (\n    <div className=\"group relative\">\n      <div className=\"flex gap-4 overflow-x-auto scrollbar-hide scroll-smooth\">\n        {contents.map((content) => (\n          <ContentCard key={content.id} content={mapToCardProps(content)} />\n        ))}\n      </div>\n    </div>\n  );\n}\n \nexport default ContentGrid;"],"names":[],"mappings":";;;;;AACA;;;AAEA,qBAAqB;AACrB,SAAS,eAAe,OAAuB;IAC7C,MAAM,SAAS,gBAAgB;IAC/B,OAAO;QACL,MAAM,QAAQ,EAAE;QAChB,OAAO,QAAQ,KAAK;QACpB,OAAO,QAAQ,KAAK;QACpB,MAAM,QAAQ,IAAI;QAClB,OAAO,SAAS,AAAC,QAAiB,UAAU,GAAG;QAC/C,OAAO,CAAC,SAAS,AAAC,QAAoB,KAAK,GAAG;IAChD;AACF;AAEA,SAAS,YAAY,EAAE,QAAQ,EAAoC;IACjE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC,oKAAW;oBAAkB,SAAS,eAAe;mBAApC,QAAQ,EAAE;;;;;;;;;;;;;;;AAKtC;uCAEe","debugId":null}},
    {"offset": {"line": 1172, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/footer.tsx"],"sourcesContent":["const HANDLE = \"@1080tomoyo\";\nconst DEVELOPER_LINK = \"https://github.com/1080tomoyo\";\n \nfunction Footer() {\n  return (\n    <footer className=\"text-center py-8\">\n      <p className=\"text-gray-500\">\n        Created by{\" \"}\n        <a\n          className=\"text-blue-500\"\n          href={DEVELOPER_LINK}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {HANDLE}\n        </a>{\" \"}\n        &copy; {new Date().getFullYear()}\n      </p>\n    </footer>\n  );\n}\n \nexport default Footer;"],"names":[],"mappings":";;;;;;AAAA,MAAM,SAAS;AACf,MAAM,iBAAiB;AAEvB,SAAS;IACP,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAE,WAAU;;gBAAgB;gBAChB;8BACX,8OAAC;oBACC,WAAU;oBACV,MAAM;oBACN,QAAO;oBACP,KAAI;8BAEH;;;;;;gBACE;gBAAI;gBACD,IAAI,OAAO,WAAW;;;;;;;;;;;;AAItC;uCAEe","debugId":null}},
    {"offset": {"line": 1219, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/app/%28root%29/page.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { BookOpen, Rocket } from \"lucide-react\";\nimport { fetchArticles, fetchBooks } from \"@/lib/github\";\nimport Link from \"next/link\";\nimport FeaturedContent from \"./_components/featured-content\";\nimport ContentGrid from \"./_components/content-grid\";\nimport Footer from \"@/components/footer\";\nimport SignInButton from \"@/components/sign-in-button\";\n \nexport default async function Home() {\n  const books = await fetchBooks();\n  const articles = await fetchArticles();\n  return (\n    <>\n      <div className=\"container max-w-6xl mx-auto px-4 py-8\">\n        <section className=\"my-16 text-center\">\n          <h1 className=\"mb-4 text-4xl font-bold tracking-tight sm:text-5xl md:text-6xl\">\n            自分にぴったりの教材が、\n            <br />\n            理解へのファストパス\n          </h1>\n          <p className=\"mb-8 text-xl text-muted-foreground\">\n            入門から実践まで。無料で始められる、プログラミング学習に役立つリソースのコレクション。\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n            <SignInButton className=\"px-8! h-11 font-semibold\" size=\"lg\">\n              <Rocket className=\"w-5 h-5\" />\n              無料で始める\n            </SignInButton>\n            <Button variant=\"outline\" className=\"px-8! h-11\" size=\"lg\" asChild>\n              <Link href=\"#articles\">\n                <BookOpen className=\"w-5 h-5\" />\n                教材を探す\n              </Link>\n            </Button>\n          </div>\n        </section>\n      </div>\n \n      <div className=\"max-w-7xl mx-auto\">\n        <FeaturedContent />\n        <h2 id=\"articles\" className=\"text-5xl font-bold mt-24 mb-16\">\n          おすすめの記事を読む。\n        </h2>\n        <ContentGrid contents={articles} />\n      </div>\n      <div className=\"w-full bg-[#F5F5F7] mt-12 py-12\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h2 id=\"books\" className=\"text-5xl font-bold mb-16\">\n            本で深くまで踏み込む。\n          </h2>\n          <ContentGrid contents={books} />\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEe,eAAe;IAC5B,MAAM,QAAQ,MAAM,IAAA,kIAAU;IAC9B,MAAM,WAAW,MAAM,IAAA,qIAAa;IACpC,qBACE;;0BACE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAQ,WAAU;;sCACjB,8OAAC;4BAAG,WAAU;;gCAAiE;8CAE7E,8OAAC;;;;;gCAAK;;;;;;;sCAGR,8OAAC;4BAAE,WAAU;sCAAqC;;;;;;sCAGlD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,qJAAY;oCAAC,WAAU;oCAA2B,MAAK;;sDACtD,8OAAC,gNAAM;4CAAC,WAAU;;;;;;wCAAY;;;;;;;8CAGhC,8OAAC,4IAAM;oCAAC,SAAQ;oCAAU,WAAU;oCAAa,MAAK;oCAAK,OAAO;8CAChE,cAAA,8OAAC,uKAAI;wCAAC,MAAK;;0DACT,8OAAC,0NAAQ;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQ1C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,wKAAe;;;;;kCAChB,8OAAC;wBAAG,IAAG;wBAAW,WAAU;kCAAiC;;;;;;kCAG7D,8OAAC,oKAAW;wBAAC,UAAU;;;;;;;;;;;;0BAEzB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,IAAG;4BAAQ,WAAU;sCAA2B;;;;;;sCAGpD,8OAAC,oKAAW;4BAAC,UAAU;;;;;;;;;;;;;;;;;0BAG3B,8OAAC,uIAAM;;;;;;;AAGb","debugId":null}}]
}