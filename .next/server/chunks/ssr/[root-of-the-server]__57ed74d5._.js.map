{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_5972bc34.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_5972bc34-module__OU16Qa__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_5972bc34.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/auth.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport GitHub from \"next-auth/providers/github\";\n\n/**\n * NextAuth.js認証設定モジュール\n * \n * このモジュールは、アプリケーション全体の認証システムを設定します。\n * GitHub OAuthを使用してユーザー認証を行い、セッション管理と\n * ユーザー情報の管理を担当します。\n * \n * 主要機能：\n * - GitHub OAuth認証プロバイダーの設定\n * - ユーザープロファイル情報のマッピング\n * - JWTトークンの管理とカスタマイズ\n * - セッション情報の管理と拡張\n * \n * セキュリティ考慮事項：\n * - GitHub OAuthの標準的な認証フローを使用\n * - JWTトークンによる安全なセッション管理\n * - ユーザーIDの一意性保証\n * \n * 環境変数要件：\n * - AUTH_SECRET: JWT署名用の秘密鍵\n * - GITHUB_ID: GitHub OAuth AppのClient ID\n * - GITHUB_SECRET: GitHub OAuth AppのClient Secret\n */\n\n// ============================================================================\n// NextAuth.js設定\n// ============================================================================\n\nexport const { handlers, signIn, signOut, auth } = NextAuth({\n  // ============================================================================\n  // 認証プロバイダー設定\n  // ============================================================================\n  \n  /**\n   * 認証プロバイダーの設定\n   * \n   * このアプリケーションでは、GitHub OAuthのみを使用しています。\n   * GitHubアカウントを持っているユーザーは、簡単にログインできます。\n   */\n  providers: [\n    GitHub({\n      /**\n       * GitHubプロファイル情報のマッピング\n       * \n       * GitHubから取得したユーザー情報を、アプリケーションで使用する\n       * 形式に変換します。これにより、一貫したユーザー情報を\n       * アプリケーション全体で使用できます。\n       * \n       * @param profile - GitHubから取得したプロファイル情報\n       * @returns アプリケーション用のユーザー情報オブジェクト\n       */\n      profile(profile) {\n        return {\n          // GitHubの数値IDを文字列に変換して使用\n          // これにより、データベースでの一意性を保証\n          id: profile.id.toString(),\n          \n          // 表示名の決定ロジック\n          // GitHubのnameが設定されていない場合は、login名を使用\n          // これにより、必ず表示名が存在することを保証\n          name: profile.name || profile.login,\n          \n          // メールアドレス（GitHubで公開設定されている場合のみ）\n          // プライベート設定の場合はnullになる可能性がある\n          email: profile.email,\n          \n          // アバター画像のURL\n          // GitHubのプロフィール画像をそのまま使用\n          image: profile.avatar_url,\n        };\n      },\n    }),\n  ],\n\n  // ============================================================================\n  // コールバック設定\n  // ============================================================================\n  \n  /**\n   * 認証フロー中のコールバック関数\n   * \n   * これらのコールバックは、認証プロセスの各段階で呼び出され、\n   * トークンやセッション情報をカスタマイズできます。\n   */\n  callbacks: {\n    /**\n     * JWTトークンのカスタマイズ\n     * \n     * この関数は、JWTトークンが作成・更新される際に呼び出されます。\n     * 初回サインイン時やトークンの更新時に、GitHubのプロファイル情報を\n     * JWTトークンに保存します。\n     * \n     * @param token - 現在のJWTトークン\n     * @param profile - GitHubから取得したプロファイル情報\n     * @param user - ユーザー情報\n     * @returns カスタマイズされたJWTトークン\n     */\n    jwt({ token, profile, user }) {\n      // 初回サインイン時の処理\n      // userとprofileが存在する場合（初回サインイン時）のみ実行\n      if (user && profile) {\n        // GitHubの一意のIDをJWTトークンに保存\n        // これにより、後でセッションからユーザーIDを取得できる\n        token.id = profile.id;\n      }\n      \n      // カスタマイズされたトークンを返す\n      return token;\n    },\n\n    /**\n     * セッション情報のカスタマイズ\n     * \n     * この関数は、セッション情報が作成される際に呼び出されます。\n     * JWTトークンからユーザーIDを取得し、セッション情報に追加します。\n     * これにより、アプリケーション全体でユーザーIDを使用できます。\n     * \n     * @param session - 現在のセッション情報\n     * @param token - JWTトークン\n     * @returns カスタマイズされたセッション情報\n     */\n    session({ session, token }) {\n      // セッションにユーザー情報が存在する場合のみ処理\n      if (session?.user) {\n        // JWTトークンからGitHubの一意のIDを取得してセッションに追加\n        // これにより、購入記録の管理やユーザー識別が可能になる\n        session.user.id = token.id as string;\n      }\n      \n      // カスタマイズされたセッション情報を返す\n      return session;\n    },\n  },\n});"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;;;AA8BO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAA,gKAAQ,EAAC;IAC1D,+EAA+E;IAC/E,aAAa;IACb,+EAA+E;IAE/E;;;;;GAKC,GACD,WAAW;QACT,IAAA,gKAAM,EAAC;YACL;;;;;;;;;OASC,GACD,SAAQ,OAAO;gBACb,OAAO;oBACL,yBAAyB;oBACzB,uBAAuB;oBACvB,IAAI,QAAQ,EAAE,CAAC,QAAQ;oBAEvB,aAAa;oBACb,oCAAoC;oBACpC,wBAAwB;oBACxB,MAAM,QAAQ,IAAI,IAAI,QAAQ,KAAK;oBAEnC,gCAAgC;oBAChC,4BAA4B;oBAC5B,OAAO,QAAQ,KAAK;oBAEpB,aAAa;oBACb,yBAAyB;oBACzB,OAAO,QAAQ,UAAU;gBAC3B;YACF;QACF;KACD;IAED,+EAA+E;IAC/E,WAAW;IACX,+EAA+E;IAE/E;;;;;GAKC,GACD,WAAW;QACT;;;;;;;;;;;KAWC,GACD,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE;YAC1B,cAAc;YACd,oCAAoC;YACpC,IAAI,QAAQ,SAAS;gBACnB,0BAA0B;gBAC1B,8BAA8B;gBAC9B,MAAM,EAAE,GAAG,QAAQ,EAAE;YACvB;YAEA,mBAAmB;YACnB,OAAO;QACT;QAEA;;;;;;;;;;KAUC,GACD,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YACxB,0BAA0B;YAC1B,IAAI,SAAS,MAAM;gBACjB,qCAAqC;gBACrC,6BAA6B;gBAC7B,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAC5B;YAEA,sBAAsB;YACtB,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qEACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,qEACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qEACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qEACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,qEACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,qEACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qEACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,qEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,qEACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iDACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,iDACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iDACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iDACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iDACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iDACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iDACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iDACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/user-avatar.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport { auth, signOut } from \"../../auth\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n \nexport default async function UserAvatar() {\n  const session = await auth();\n \n  if (!session?.user) return null;\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Image\n          width={40}\n          height={40}\n          src={session.user.image!}\n          alt=\"User Avatar\"\n          className=\"rounded-full\"\n        />\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        <DropdownMenuLabel>{session?.user?.name}</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>\n          <form\n            action={async () => {\n              \"use server\";\n              await signOut();\n            }}\n          >\n            <button type=\"submit\">Log Out</button>\n          </form>\n          <DropdownMenuShortcut>⇧⌘Q</DropdownMenuShortcut>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;;;;;;MA8BoB,uCAAR;IAEE,MAAM,IAAA,+GAAO;AACf;AAHQ,+OAAA;AApBL,eAAe;IAC5B,MAAM,UAAU,MAAM,IAAA,4GAAI;IAE1B,IAAI,CAAC,SAAS,MAAM,OAAO;IAC3B,qBACE,8OAAC,4JAAY;;0BACX,8OAAC,mKAAmB;gBAAC,OAAO;0BAC1B,cAAA,8OAAC,wIAAK;oBACJ,OAAO;oBACP,QAAQ;oBACR,KAAK,QAAQ,IAAI,CAAC,KAAK;oBACvB,KAAI;oBACJ,WAAU;;;;;;;;;;;0BAGd,8OAAC,mKAAmB;gBAAC,WAAU;;kCAC7B,8OAAC,iKAAiB;kCAAE,SAAS,MAAM;;;;;;kCACnC,8OAAC,qKAAqB;;;;;kCACtB,8OAAC,gKAAgB;;0CACf,8OAAC;gCACC,QAAQ;0CAKR,cAAA,8OAAC;oCAAO,MAAK;8CAAS;;;;;;;;;;;0CAExB,8OAAC,oKAAoB;0CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAKhC","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * 価格を日本語形式でフォーマットする\n * @param price 価格（数値）\n * @returns フォーマットされた価格文字列\n */\nexport function formatPrice(price: number): string {\n  return price === 0 ? \"無料\" : `¥${price.toLocaleString()}`\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAOO,SAAS,YAAY,KAAa;IACvC,OAAO,UAAU,IAAI,OAAO,CAAC,CAAC,EAAE,MAAM,cAAc,IAAI;AAC1D","debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n  \n  // ハイドレーションエラーを防ぐため、classNameを安定化\n  const stableClassName = React.useMemo(() => \n    cn(buttonVariants({ variant, size, className })), \n    [variant, size, className]\n  )\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={stableClassName}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,iCAAiC;IACjC,MAAM,kBAAkB,gNAAa,CAAC,IACpC,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU,KAC7C;QAAC;QAAS;QAAM;KAAU;IAG5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW;QACV,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/sign-in-button.tsx"],"sourcesContent":["import { signIn } from \"../../auth\";\nimport { Button } from \"./ui/button\";\n \ninterface SignInButtonProps {\n  className?: string;\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  children?: React.ReactNode;\n}\n \nexport default function SignInButton(props: SignInButtonProps) {\n  return (\n    <form\n      action={async () => {\n        \"use server\";\n        await signIn(\"github\");\n      }}\n    >\n      <Button size={props.size} className={props.className} type=\"submit\">\n        {props.children || \"Login\"}\n      </Button>\n    </form>\n  );\n}"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;;;MAWc,uCAAR;IAEE,MAAM,IAAA,8GAAM,EAAC;AACf;AAHQ,+OAAA;AAHC,SAAS,aAAa,KAAwB;IAC3D,qBACE,8OAAC;QACC,QAAQ;kBAKR,cAAA,8OAAC,4IAAM;YAAC,MAAM,MAAM,IAAI;YAAE,WAAW,MAAM,SAAS;YAAE,MAAK;sBACxD,MAAM,QAAQ,IAAI;;;;;;;;;;;AAI3B","debugId":null}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/components/header.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { auth } from \"../../auth\";\nimport UserAvatar from \"./user-avatar\";\nimport SignInButton from \"./sign-in-button\";\n \nasync function Header() {\n  const session = await auth();\n  return (\n    <nav className=\"border-b sticky top-0 z-50 bg-background\">\n      <div className=\"flex h-16 items-center container mx-auto\">\n        <Link href=\"/\" className=\"mr-6 flex items-center space-x-2\">\n          <span className=\"text-xl font-bold\">Content EC</span>\n        </Link>\n \n        <div className=\"ml-auto flex items-center space-x-4\">\n          {session?.user ? <UserAvatar /> : <SignInButton />}\n        </div>\n      </div>\n    </nav>\n  );\n}\n \nexport default Header;"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,eAAe;IACb,MAAM,UAAU,MAAM,IAAA,4GAAI;IAC1B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,uKAAI;oBAAC,MAAK;oBAAI,WAAU;8BACvB,cAAA,8OAAC;wBAAK,WAAU;kCAAoB;;;;;;;;;;;8BAGtC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,qBAAO,8OAAC,+IAAU;;;;6CAAM,8OAAC,qJAAY;;;;;;;;;;;;;;;;;;;;;AAKzD;uCAEe","debugId":null}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":["file:///Users/toyamatomoyo/Desktop/content-ec/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport Header from \"@/components/header\";\n \nconst inter = Inter({ subsets: [\"latin\"] });\n \nexport const metadata: Metadata = {\n  title: \"Content EC\",\n  description: \"Premium content marketplace for technology.\",\n};\n \nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"ja\">\n      <body className={`${inter.className}  antialiased`}>\n        <Header />\n        <main className=\"min-h-screen bg-background\">{children}</main>\n      </body>\n    </html>\n  );\n}"],"names":[],"mappings":";;;;;;;;AAGA;;;;;AAIO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAW,GAAG,oJAAK,CAAC,SAAS,CAAC,aAAa,CAAC;;8BAChD,8OAAC,uIAAM;;;;;8BACP,8OAAC;oBAAK,WAAU;8BAA8B;;;;;;;;;;;;;;;;;AAItD","debugId":null}}]
}